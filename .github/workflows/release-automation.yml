name: release-automation

on:
  push:
    tags:
      - "v*"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - run: docker build -f test/Dockerfile -t csgo-dof-screenshot-test .
      - run: docker run --name test-container csgo-dof-screenshot-test
      - run: docker cp test-container:/csgo-dof-screenshot/dist/csgo-dof-screenshot.appImage csgo-dof-screenshot.appImage
      - name: Upload linux portable executable.
        uses: actions/upload-artifact@v1
        with:
          name: linux-portable
          path: csgo-dof-screenshot.appImage

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
      - run: make -C imgMerger/src
      - uses: actions/setup-node@v1
      - run: npm install
      - run: mkdir extraResources
      - run: cp imgMerger/bin/imgMerger extraResources/imgMerger
      - run: npm run build
      - run: npm run build-test
      - run: npm run test
      - name: Upload windows portable executable.
        uses: actions/upload-artifact@v1
        with:
          name: win32-portable
          path: dist/csgo-dof-screenshot.exe

  do-release:
    needs:
      - build-linux
      - build-windows
    runs-on: ubuntu-latest
    steps:
      - name: Download linux portable executable.
        uses: actions/download-artifact@v1
        with:
          name: linux-portable
      - name: Download windows portable executable.
        uses: actions/download-artifact@v1
        with:
          name: win32-portable
      - run: tar -czf linux-portable.tar.gz linux-portable
      - run: zip -r win32-portable.zip win32-portable

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload linux asset.
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: win32-portable.zip
          asset_name: csgo-dof-screenshot-${{ github.ref }}-win32-portable.zip
          asset_content_type: application/zip

      - name: Upload windows asset.
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: linux-portable.tar.gz
          asset_name: csgo-dof-screenshot-${{ github.ref }}-linux-portable.tar.gz
          asset_content_type: application/gzip
